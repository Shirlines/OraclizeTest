{
  "contractName": "OraclizeTest",
  "abi": [
    {
      "inputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "newOraclizeQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "data",
          "type": "string"
        }
      ],
      "name": "newData",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "queryId",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "update",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000ba60017f01000000000000000000000000000000000000000000000000000000000000000260107f01000000000000000000000000000000000000000000000000000000000000000217620000f7640100000000026401000000009004565b620000d8633b9aca00620004ab640100000000026401000000009004565b620000f16200081b640100000000026401000000009004565b62001b10565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806200017857506000620001766000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000ad3640100000000026401000000009004565b145b156200019b5762000199600062000ade640100000000026401000000009004565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200022157600080fd5b505af115801562000236573d6000803e3d6000fd5b505050506040513d60208110156200024d57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515620003b9576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200033b57600080fd5b505af115801562000350573d6000803e3d6000fd5b505050506040513d60208110156200036757600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663688dcfd7826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001915050600060405180830381600087803b1580156200048f57600080fd5b505af1158015620004a4573d6000803e3d6000fd5b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806200052c575060006200052a6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000ad3640100000000026401000000009004565b145b156200054f576200054d600062000ade640100000000026401000000009004565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620005d557600080fd5b505af1158015620005ea573d6000803e3d6000fd5b505050506040513d60208110156200060157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156200076d576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620006ef57600080fd5b505af115801562000704573d6000803e3d6000fd5b505050506040513d60208110156200071b57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ca6ad1e4826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b158015620007ff57600080fd5b505af115801562000814573d6000803e3d6000fd5b5050505050565b6000659f295cd5f00034101515156200083357600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16316200089a6040805190810160405280600381526020017f55524c000000000000000000000000000000000000000000000000000000000081525062000b00640100000000026401000000009004565b11156200095b577f46cb989ef9cef13e930e3b7f286225a086e716a90d63e0b7da85d310a9db0c9a60405180806020018281038252604b8152602001807f4f7261636c697a6520717565727920776173204e4f542073656e742c20706c6581526020017f6173652061646420736f6d652045544820746f20636f76657220666f7220746881526020017f652071756572792066656500000000000000000000000000000000000000000081525060600191505060405180910390a162000ad0565b7f46cb989ef9cef13e930e3b7f286225a086e716a90d63e0b7da85d310a9db0c9a6040518080602001828103825260358152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e000000000000000000000081525060400191505060405180910390a162000a996040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250606060405190810160405280603881526020017f6a736f6e28687474703a2f2f766172697573776f726c64746563682e636f6d2f81526020017f726573756c74732e6a736f6e292e245b315d2e656d61696c00000000000000008152506202ab9862000f01640100000000026401000000009004565b9050600160056000836000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b6000813b9050919050565b600062000af9620014ed640100000000026401000000009004565b9050919050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148062000b825750600062000b806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000ad3640100000000026401000000009004565b145b1562000ba55762000ba3600062000ade640100000000026401000000009004565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000c2b57600080fd5b505af115801562000c40573d6000803e3d6000fd5b505050506040513d602081101562000c5757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562000dc3576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000d4557600080fd5b505af115801562000d5a573d6000803e3d6000fd5b505050506040513d602081101562000d7157600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562000e6f57808201518184015260208101905062000e52565b50505050905090810190601f16801562000e9d5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801562000ebd57600080fd5b505af115801562000ed2573d6000803e3d6000fd5b505050506040513d602081101562000ee957600080fd5b81019080805190602001909291905050509050919050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148062000f855750600062000f836000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000ad3640100000000026401000000009004565b145b1562000fa85762000fa6600062000ade640100000000026401000000009004565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200102e57600080fd5b505af115801562001043573d6000803e3d6000fd5b505050506040513d60208110156200105a57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515620011c6576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200114857600080fd5b505af11580156200115d573d6000803e3d6000fd5b505050506040513d60208110156200117457600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015620012795780820151818401526020810190506200125c565b50505050905090810190601f168015620012a75780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015620012c857600080fd5b505af1158015620012dd573d6000803e3d6000fd5b505050506040513d6020811015620012f457600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115620013295760006001029150620014e5565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c51be90f8260008888886040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015620013ea578082015181840152602081019050620013cd565b50505050905090810190601f168015620014185780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156200145357808201518184015260208101905062001436565b50505050905090810190601f168015620014815780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b158015620014a457600080fd5b505af1158015620014b9573d6000803e3d6000fd5b50505050506040513d6020811015620014d157600080fd5b810190808051906020019092919050505091505b509392505050565b6000806200151e731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed62000ad3640100000000026401000000009004565b1115620015d257731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620015c86040805190810160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525062001a45640100000000026401000000009004565b6001905062001a42565b60006200160273c03a2615d5efaf5f49f60b7bb6583eaec212fdf162000ad3640100000000026401000000009004565b1115620016b65773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620016ac6040805190810160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525062001a45640100000000026401000000009004565b6001905062001a42565b6000620016e673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e62000ad3640100000000026401000000009004565b11156200179a5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620017906040805190810160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525062001a45640100000000026401000000009004565b6001905062001a42565b6000620017ca73146500cfd35b22e4a392fe0adc06de1a1368ed4862000ad3640100000000026401000000009004565b11156200187e5773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620018746040805190810160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525062001a45640100000000026401000000009004565b6001905062001a42565b6000620018ae736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47562000ad3640100000000026401000000009004565b11156200191357736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001a42565b6000620019437320e12a1f859b3feae5fb2a0a32c18f5a65555bbf62000ad3640100000000026401000000009004565b1115620019a8577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001a42565b6000620019d87351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa62000ad3640100000000026401000000009004565b111562001a3d577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001a42565b600090505b90565b806002908051906020019062001a5d92919062001a61565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062001aa457805160ff191683800117855562001ad5565b8280016001018555821562001ad5579182015b8281111562001ad457825182559160200191906001019062001ab7565b5b50905062001ae4919062001ae8565b5090565b62001b0d91905b8082111562001b0957600081600090555060010162001aef565b5090565b90565b61182e8062001b206000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327dc297e1461005c57806338bbfa50146100d3578063a2e6204514610190575b600080fd5b34801561006857600080fd5b506100d16004803603810190808035600019169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061019a565b005b3480156100df57600080fd5b5061018e6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506101dd565b005b610198610327565b005b6101d9828260006040519080825280601f01601f1916602001820160405280156101d35781602001602082028038833980820191505090505b506101dd565b5050565b6101e56105ba565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561021e57600080fd5b60056000846000191660001916815260200190815260200160002060009054906101000a900460ff16151561025257600080fd5b7fc7b92da14f3b5dca7f84eed512b7394dbe81da707e97db12ef6549744f1e542f826040518080602001828103825283818151815260200191508051906020019080838360005b838110156102b4578082015181840152602081019050610299565b50505050905090810190601f1680156102e15780820380516001836020036101000a031916815260200191505b509250505060405180910390a1600060056000856000191660001916815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b6000659f295cd5f000341015151561033e57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16316103946040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250610918565b1115610453577f46cb989ef9cef13e930e3b7f286225a086e716a90d63e0b7da85d310a9db0c9a60405180806020018281038252604b8152602001807f4f7261636c697a6520717565727920776173204e4f542073656e742c20706c6581526020017f6173652061646420736f6d652045544820746f20636f76657220666f7220746881526020017f652071756572792066656500000000000000000000000000000000000000000081525060600191505060405180910390a16105b7565b7f46cb989ef9cef13e930e3b7f286225a086e716a90d63e0b7da85d310a9db0c9a6040518080602001828103825260358152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e000000000000000000000081525060400191505060405180910390a16105806040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250606060405190810160405280603881526020017f6a736f6e28687474703a2f2f766172697573776f726c64746563682e636f6d2f81526020017f726573756c74732e6a736f6e292e245b315d2e656d61696c00000000000000008152506202ab98610ce8565b9050600160056000836000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061062a575060006106286000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611298565b145b1561063b5761063960006112a3565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156106c057600080fd5b505af11580156106d4573d6000803e3d6000fd5b505050506040513d60208110156106ea57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610852576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156107d657600080fd5b505af11580156107ea573d6000803e3d6000fd5b505050506040513d602081101561080057600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156108d857600080fd5b505af11580156108ec573d6000803e3d6000fd5b505050506040513d602081101561090257600080fd5b8101908080519060200190929190505050905090565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610988575060006109866000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611298565b145b156109995761099760006112a3565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610a1e57600080fd5b505af1158015610a32573d6000803e3d6000fd5b505050506040513d6020811015610a4857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610bb0576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610b3457600080fd5b505af1158015610b48573d6000803e3d6000fd5b505050506040513d6020811015610b5e57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c5a578082015181840152602081019050610c3f565b50505050905090810190601f168015610c875780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610ca657600080fd5b505af1158015610cba573d6000803e3d6000fd5b505050506040513d6020811015610cd057600080fd5b81019080805190602001909291905050509050919050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610d5a57506000610d586000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611298565b145b15610d6b57610d6960006112a3565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610df057600080fd5b505af1158015610e04573d6000803e3d6000fd5b505050506040513d6020811015610e1a57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610f82576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610f0657600080fd5b505af1158015610f1a573d6000803e3d6000fd5b505050506040513d6020811015610f3057600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611033578082015181840152602081019050611018565b50505050905090810190601f1680156110605780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561108057600080fd5b505af1158015611094573d6000803e3d6000fd5b505050506040513d60208110156110aa57600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a7640000018111156110dd5760006001029150611290565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c51be90f8260008888886040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b8381101561119c578082015181840152602081019050611181565b50505050905090810190601f1680156111c95780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156112025780820151818401526020810190506111e7565b50505050905090810190601f16801561122f5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801561125157600080fd5b505af1158015611265573d6000803e3d6000fd5b50505050506040513d602081101561127c57600080fd5b810190808051906020019092919050505091505b509392505050565b6000813b9050919050565b60006112ad6112b4565b9050919050565b6000806112d4731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611298565b111561137557731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061136c6040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611743565b60019050611740565b600061139473c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611298565b11156114355773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061142c6040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611743565b60019050611740565b600061145473b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611298565b11156114f55773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506114ec6040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611743565b60019050611740565b600061151473146500cfd35b22e4a392fe0adc06de1a1368ed48611298565b11156115b55773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115ac6040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611743565b60019050611740565b60006115d4736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611298565b111561163757736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611740565b60006116567320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611298565b11156116b9577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611740565b60006116d87351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611298565b111561173b577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611740565b600090505b90565b806002908051906020019061175992919061175d565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061179e57805160ff19168380011785556117cc565b828001600101855582156117cc579182015b828111156117cb5782518255916020019190600101906117b0565b5b5090506117d991906117dd565b5090565b6117ff91905b808211156117fb5760008160009055506001016117e3565b5090565b905600a165627a7a72305820d545989f8f25fb7043a7ae2b22cbe39e5b8c317c979926fc983e4a264ef8654d0029",
  "deployedBytecode": "0x608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327dc297e1461005c57806338bbfa50146100d3578063a2e6204514610190575b600080fd5b34801561006857600080fd5b506100d16004803603810190808035600019169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061019a565b005b3480156100df57600080fd5b5061018e6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506101dd565b005b610198610327565b005b6101d9828260006040519080825280601f01601f1916602001820160405280156101d35781602001602082028038833980820191505090505b506101dd565b5050565b6101e56105ba565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561021e57600080fd5b60056000846000191660001916815260200190815260200160002060009054906101000a900460ff16151561025257600080fd5b7fc7b92da14f3b5dca7f84eed512b7394dbe81da707e97db12ef6549744f1e542f826040518080602001828103825283818151815260200191508051906020019080838360005b838110156102b4578082015181840152602081019050610299565b50505050905090810190601f1680156102e15780820380516001836020036101000a031916815260200191505b509250505060405180910390a1600060056000856000191660001916815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b6000659f295cd5f000341015151561033e57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16316103946040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250610918565b1115610453577f46cb989ef9cef13e930e3b7f286225a086e716a90d63e0b7da85d310a9db0c9a60405180806020018281038252604b8152602001807f4f7261636c697a6520717565727920776173204e4f542073656e742c20706c6581526020017f6173652061646420736f6d652045544820746f20636f76657220666f7220746881526020017f652071756572792066656500000000000000000000000000000000000000000081525060600191505060405180910390a16105b7565b7f46cb989ef9cef13e930e3b7f286225a086e716a90d63e0b7da85d310a9db0c9a6040518080602001828103825260358152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e000000000000000000000081525060400191505060405180910390a16105806040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250606060405190810160405280603881526020017f6a736f6e28687474703a2f2f766172697573776f726c64746563682e636f6d2f81526020017f726573756c74732e6a736f6e292e245b315d2e656d61696c00000000000000008152506202ab98610ce8565b9050600160056000836000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061062a575060006106286000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611298565b145b1561063b5761063960006112a3565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156106c057600080fd5b505af11580156106d4573d6000803e3d6000fd5b505050506040513d60208110156106ea57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610852576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156107d657600080fd5b505af11580156107ea573d6000803e3d6000fd5b505050506040513d602081101561080057600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156108d857600080fd5b505af11580156108ec573d6000803e3d6000fd5b505050506040513d602081101561090257600080fd5b8101908080519060200190929190505050905090565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610988575060006109866000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611298565b145b156109995761099760006112a3565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610a1e57600080fd5b505af1158015610a32573d6000803e3d6000fd5b505050506040513d6020811015610a4857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610bb0576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610b3457600080fd5b505af1158015610b48573d6000803e3d6000fd5b505050506040513d6020811015610b5e57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c5a578082015181840152602081019050610c3f565b50505050905090810190601f168015610c875780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610ca657600080fd5b505af1158015610cba573d6000803e3d6000fd5b505050506040513d6020811015610cd057600080fd5b81019080805190602001909291905050509050919050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610d5a57506000610d586000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611298565b145b15610d6b57610d6960006112a3565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610df057600080fd5b505af1158015610e04573d6000803e3d6000fd5b505050506040513d6020811015610e1a57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610f82576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610f0657600080fd5b505af1158015610f1a573d6000803e3d6000fd5b505050506040513d6020811015610f3057600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611033578082015181840152602081019050611018565b50505050905090810190601f1680156110605780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561108057600080fd5b505af1158015611094573d6000803e3d6000fd5b505050506040513d60208110156110aa57600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a7640000018111156110dd5760006001029150611290565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c51be90f8260008888886040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b8381101561119c578082015181840152602081019050611181565b50505050905090810190601f1680156111c95780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156112025780820151818401526020810190506111e7565b50505050905090810190601f16801561122f5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801561125157600080fd5b505af1158015611265573d6000803e3d6000fd5b50505050506040513d602081101561127c57600080fd5b810190808051906020019092919050505091505b509392505050565b6000813b9050919050565b60006112ad6112b4565b9050919050565b6000806112d4731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611298565b111561137557731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061136c6040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611743565b60019050611740565b600061139473c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611298565b11156114355773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061142c6040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611743565b60019050611740565b600061145473b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611298565b11156114f55773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506114ec6040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611743565b60019050611740565b600061151473146500cfd35b22e4a392fe0adc06de1a1368ed48611298565b11156115b55773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115ac6040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611743565b60019050611740565b60006115d4736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611298565b111561163757736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611740565b60006116567320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611298565b11156116b9577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611740565b60006116d87351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611298565b111561173b577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611740565b600090505b90565b806002908051906020019061175992919061175d565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061179e57805160ff19168380011785556117cc565b828001600101855582156117cc579182015b828111156117cb5782518255916020019190600101906117b0565b5b5090506117d991906117dd565b5090565b6117ff91905b808211156117fb5760008160009055506001016117e3565b5090565b905600a165627a7a72305820d545989f8f25fb7043a7ae2b22cbe39e5b8c317c979926fc983e4a264ef8654d0029",
  "sourceMap": "137:1949:0:-;;;587:42;559:3;;:71;;;;;;;;;;;;;;;;;;680:58;2929:4:1;720:17:0;;2755:4:1;698:19:0;;:39;680:17;;;:58;;;:::i;:::-;809:42;836:14;809:26;;;:42;;;:::i;:::-;871:8;:6;;;:8;;;:::i;:::-;137:1949;;25467:114:1;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;;;:25;;;:::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;;;:35;;;:::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;25545:8;;;;;;;;;;;:21;;;25567:6;25545:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25545:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25545:29:1;;;;25467:114;:::o;25586:132::-;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;;;:25;;;:::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;;;:35;;;:::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;25675:8;;;;;;;;;;;:26;;;25702:8;25675:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25675:36:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25675:36:1;;;;25586:132;:::o;1318:765:0:-;1839:15;1446:14;1433:9;:27;;1425:36;;;;;;;;1544:4;1536:21;;;1509:24;;;;;;;;;;;;;;;;;;;:17;;;:24;;;:::i;:::-;:48;1505:571;;;1579:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1505:571;;;1712:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1857:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;315:6;1857:14;;;:102;;;:::i;:::-;1839:120;;2046:4;2026:8;:17;2035:7;2026:17;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1505:571;1318:765;:::o;25882:150:1:-;25944:10;26010:5;25998:18;25989:27;;25975:51;;;:::o;3565:183::-;3628:4;3648:21;:19;;;:21;;;:::i;:::-;3641:28;;3565:183;;;:::o;5776:134::-;5852:4;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;;;:25;;;:::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;;;:35;;;:::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;5874:8;;;;;;;;;;;:17;;;5892:10;5874:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5874:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5874:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5874:29:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5874:29:1;;;;;;;;;;;;;;;;5867:36;;5776:134;;;:::o;7112:356::-;7212:10;7233;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;;;:25;;;:::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;;;:35;;;:::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;7246:8;;;;;;;;;;;:17;;;7264:10;7276:8;7246:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7246:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7246:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7246:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7246:39:1;;;;;;;;;;;;;;;;7233:52;;7329:8;7317:11;:20;7307:7;:30;7299:5;:38;7295:52;;;7346:1;7339:8;;;;;;7295:52;7391:8;;;;;;;;;;;:27;;;7425:5;7432:1;7435:10;7447:3;7452:8;7391:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7391:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7391:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7391:70:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7391:70:1;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7391:70:1;;;;;;;;;;;;;;;;7384:77;;3452:1;7112:356;;;;;;:::o;3753:1749::-;3801:4;3876:1;3820:55;3832:42;3820:11;;;:55;;;:::i;:::-;:57;3816:245;;;3930:42;3902:3;;:71;;;;;;;;;;;;;;;;;;3987:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;4046:4;4039:11;;;;3816:245;4130:1;4074:55;4086:42;4074:11;;;:55;;;:::i;:::-;:57;4070:254;;;4192:42;4164:3;;:71;;;;;;;;;;;;;;;;;;4249:39;;;;;;;;;;;;;;;;;;;:23;;;:39;;;:::i;:::-;4309:4;4302:11;;;;4070:254;4393:1;4337:55;4349:42;4337:11;;;:55;;;:::i;:::-;:57;4333:249;;;4453:42;4425:3;;:71;;;;;;;;;;;;;;;;;;4510:36;;;;;;;;;;;;;;;;;;;:23;;;:36;;;:::i;:::-;4567:4;4560:11;;;;4333:249;4651:1;4595:55;4607:42;4595:11;;;:55;;;:::i;:::-;:57;4591:253;;;4713:42;4685:3;;:71;;;;;;;;;;;;;;;;;;4770:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;4829:4;4822:11;;;;4591:253;4913:1;4857:55;4869:42;4857:11;;;:55;;;:::i;:::-;:57;4853:201;;;4975:42;4947:3;;:71;;;;;;;;;;;;;;;;;;5039:4;5032:11;;;;4853:201;5123:1;5067:55;5079:42;5067:11;;;:55;;;:::i;:::-;:57;5063:200;;;5184:42;5156:3;;:71;;;;;;;;;;;;;;;;;;5248:4;5241:11;;;;5063:200;5332:1;5276:55;5288:42;5276:11;;;:55;;;:::i;:::-;:57;5272:202;;;5395:42;5367:3;;:71;;;;;;;;;;;;;;;;;;5459:4;5452:11;;;;5272:202;5490:5;5483:12;;3753:1749;;:::o;34001:118::-;34099:13;34075:21;:37;;;;;;;;;;;;:::i;:::-;;34001:118;:::o;137:1949:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "137:1949:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5508:111:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5508:111:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;900:408:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;900:408:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1318:765;;;;;;5508:111:1;5574:38;5585:4;5591:6;5609:1;5599:12;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;5599:12:1;;;;5574:10;:38::i;:::-;5508:111;;:::o;900:408:0:-;1077:20;:18;:20::i;:::-;1063:34;;:10;:34;;;1055:43;;;;;;;;1144:8;:17;1153:7;1144:17;;;;;;;;;;;;;;;;;;;;;;;;;;;1136:26;;;;;;;;1178:15;1186:6;1178:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1178:15:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1295:5;1275:8;:17;1284:7;1275:17;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;900:408;;;:::o;1318:765::-;1839:15;1446:14;1433:9;:27;;1425:36;;;;;;;;1544:4;1536:21;;;1509:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;1505:571;;;1579:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1505:571;;;1712:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1857:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;315:6;1857:14;:102::i;:::-;1839:120;;2046:4;2026:8;:17;2035:7;2026:17;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1505:571;1318:765;:::o;25350:112:1:-;25410:7;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;25435:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25435:20:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25435:20:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;25435:20:1;;;;;;;;;;;;;;;;25428:27;;25350:112;:::o;5776:134::-;5852:4;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;5874:8;;;;;;;;;;;:17;;;5892:10;5874:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5874:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5874:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5874:29:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5874:29:1;;;;;;;;;;;;;;;;5867:36;;5776:134;;;:::o;7112:356::-;7212:10;7233;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;7246:8;;;;;;;;;;;:17;;;7264:10;7276:8;7246:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7246:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7246:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7246:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7246:39:1;;;;;;;;;;;;;;;;7233:52;;7329:8;7317:11;:20;7307:7;:30;7299:5;:38;7295:52;;;7346:1;7339:8;;;;;;7295:52;7391:8;;;;;;;;;;;:27;;;7425:5;7432:1;7435:10;7447:3;7452:8;7391:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7391:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7391:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7391:70:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7391:70:1;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7391:70:1;;;;;;;;;;;;;;;;7384:77;;3452:1;7112:356;;;;;;:::o;25882:150::-;25944:10;26010:5;25998:18;25989:27;;25975:51;;;:::o;3565:183::-;3628:4;3648:21;:19;:21::i;:::-;3641:28;;3565:183;;;:::o;3753:1749::-;3801:4;3876:1;3820:55;3832:42;3820:11;:55::i;:::-;:57;3816:245;;;3930:42;3902:3;;:71;;;;;;;;;;;;;;;;;;3987:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;4046:4;4039:11;;;;3816:245;4130:1;4074:55;4086:42;4074:11;:55::i;:::-;:57;4070:254;;;4192:42;4164:3;;:71;;;;;;;;;;;;;;;;;;4249:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;4309:4;4302:11;;;;4070:254;4393:1;4337:55;4349:42;4337:11;:55::i;:::-;:57;4333:249;;;4453:42;4425:3;;:71;;;;;;;;;;;;;;;;;;4510:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;4567:4;4560:11;;;;4333:249;4651:1;4595:55;4607:42;4595:11;:55::i;:::-;:57;4591:253;;;4713:42;4685:3;;:71;;;;;;;;;;;;;;;;;;4770:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;4829:4;4822:11;;;;4591:253;4913:1;4857:55;4869:42;4857:11;:55::i;:::-;:57;4853:201;;;4975:42;4947:3;;:71;;;;;;;;;;;;;;;;;;5039:4;5032:11;;;;4853:201;5123:1;5067:55;5079:42;5067:11;:55::i;:::-;:57;5063:200;;;5184:42;5156:3;;:71;;;;;;;;;;;;;;;;;;5248:4;5241:11;;;;5063:200;5332:1;5276:55;5288:42;5276:11;:55::i;:::-;:57;5272:202;;;5395:42;5367:3;;:71;;;;;;;;;;;;;;;;;;5459:4;5452:11;;;;5272:202;5490:5;5483:12;;3753:1749;;:::o;34001:118::-;34099:13;34075:21;:37;;;;;;;;;;;;:::i;:::-;;34001:118;:::o;137:1949:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.19;\r\n\r\n//Importing the Oraclize contract\r\nimport \"installed_contracts/oraclize-api/contracts/usingOraclize.sol\";\r\n\r\ncontract OraclizeTest is usingOraclize {\r\n    \r\n    //Defining variables\r\n    mapping(bytes32 => bool) validIds; //To validate Query IDs\r\n    uint constant gasLimitForOraclize = 175000; //Gas limit for Oraclize callback\r\n    \r\n    //Events to track contract actions\r\n    event newOraclizeQuery(string description);\r\n    event newData(string data);\r\n    \r\n    //Constructor  \r\n    constructor() public payable {\r\n\r\n        OAR = OraclizeAddrResolverI(0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475);\r\n        //Setting Oraclize proof type\r\n        oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS);\r\n        \r\n        //Setting gasPrice for Oraclize callback\r\n        oraclize_setCustomGasPrice(1000000000 wei); //1 Gwei\r\n        update(); \r\n    }\r\n    \r\n    function __callback(bytes32 queryId, string result, bytes proof) public {\r\n        \r\n        //Only Oraclize should be able to call this function\r\n        require(msg.sender == oraclize_cbAddress());\r\n        //Validate the ID\r\n        require(validIds[queryId]);\r\n        emit newData(result);\r\n        //To ensure the callback for a given ID is never called twice\r\n        validIds[queryId] = false;\r\n    }\r\n  \r\n    function update() public payable {  \r\n        \r\n        //Require ETH to cover callback gas costs\r\n        require(msg.value >= 0.000175 ether); //175,000 gas * 1 Gwei\r\n        \r\n        if (oraclize_getPrice(\"URL\") > address(this).balance) {\r\n            emit newOraclizeQuery(\"Oraclize query was NOT sent, please add some ETH to cover for the query fee\");\r\n        } else {\r\n            emit newOraclizeQuery(\"Oraclize query was sent, standing by for the answer..\");\r\n        \r\n            //sending query\r\n            bytes32 queryId = oraclize_query(\"URL\", \"json(http://variusworldtech.com/results.json).$[1].email\", gasLimitForOraclize);\r\n        \r\n            //Adding query ID to mapping\r\n            validIds[queryId] = true;\r\n            \r\n        }\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\Shirl\\Ethereum\\oraclize-test\\contracts\\OraclizeTest.sol",
  "ast": {
    "absolutePath": "/C/Users/Shirl/Ethereum/oraclize-test/contracts/OraclizeTest.sol",
    "exportedSymbols": {
      "OraclizeTest": [
        121
      ]
    },
    "id": 122,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "file": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 122,
        "sourceUnit": 5944,
        "src": "63:70:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5943,
              "src": "162:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$5943",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "162:13:0"
          }
        ],
        "contractDependencies": [
          5943
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 121,
        "linearizedBaseContracts": [
          121,
          5943
        ],
        "name": "OraclizeTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "validIds",
            "nodeType": "VariableDeclaration",
            "scope": 121,
            "src": "215:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 5,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "223:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "215:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 6,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "234:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 11,
            "name": "gasLimitForOraclize",
            "nodeType": "VariableDeclaration",
            "scope": 121,
            "src": "279:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "279:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313735303030",
              "id": 10,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "315:6:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_175000_by_1",
                "typeString": "int_const 175000"
              },
              "value": "175000"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 15,
            "name": "newOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "431:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "430:20:0"
            },
            "src": "408:43:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 19,
            "name": "newData",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "471:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "470:13:0"
            },
            "src": "457:27:0"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "546:342:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "559:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$239",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 24,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "587:42:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 23,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "565:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$239_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "565:65:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$239",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "559:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$239",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "559:71:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 29,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 270,
                          "src": "698:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "720:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "698:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 28,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3585,
                      "src": "680:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "680:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "680:58:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31303030303030303030",
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "836:14:0",
                        "subdenomination": "wei",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 34,
                      "name": "oraclize_setCustomGasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3598,
                      "src": "809:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "809:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "809:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "871:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "871:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "871:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 42,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:0:0"
            },
            "scope": 121,
            "src": "517:371:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "972:336:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 52,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5958,
                            "src": "1063:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1063:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 54,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3572,
                            "src": "1077:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1077:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1063:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 51,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5961,
                        5962
                      ],
                      "referencedDeclaration": 5961,
                      "src": "1055:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1055:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "1055:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 60,
                          "name": "validIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1144:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 62,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 61,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "1153:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1144:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5961,
                        5962
                      ],
                      "referencedDeclaration": 5961,
                      "src": "1136:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:26:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1186:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 65,
                      "name": "newData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1178:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1178:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "EmitStatement",
                  "src": "1173:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "validIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1275:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 71,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1284:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1275:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1295:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1275:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "1275:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 76,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "name": "queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "920:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "937:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "937:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "952:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "919:45:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "972:0:0"
            },
            "scope": 121,
            "src": "900:408:0",
            "stateMutability": "nonpayable",
            "superFunction": 531,
            "visibility": "public"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1351:732:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5958,
                            "src": "1433:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1433:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "302e303030313735",
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1446:14:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_175000000000000_by_1",
                            "typeString": "int_const 175000000000000"
                          },
                          "value": "0.000175"
                        },
                        "src": "1433:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5961,
                        5962
                      ],
                      "referencedDeclaration": 5961,
                      "src": "1425:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1425:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1425:36:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1527:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 86,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          546,
                          564
                        ],
                        "referencedDeclaration": 546,
                        "src": "1509:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1509:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 90,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5977,
                            "src": "1544:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$121",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$121",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1536:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1536:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1536:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1509:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 117,
                    "nodeType": "Block",
                    "src": "1692:384:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1729:55:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 99,
                            "name": "newOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "1712:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1712:73:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102,
                        "nodeType": "EmitStatement",
                        "src": "1707:78:0"
                      },
                      {
                        "assignments": [
                          104
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 104,
                            "name": "queryId",
                            "nodeType": "VariableDeclaration",
                            "scope": 120,
                            "src": "1839:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 103,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1839:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 110,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1872:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e28687474703a2f2f766172697573776f726c64746563682e636f6d2f726573756c74732e6a736f6e292e245b315d2e656d61696c",
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1879:58:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c8aadb064606a3463908fc19806f52b198704ad5ee4820d56c70f8bdc0582948",
                                "typeString": "literal_string \"json(http://variusworldtech.com/results.json).$[1].email\""
                              },
                              "value": "json(http://variusworldtech.com/results.json).$[1].email"
                            },
                            {
                              "argumentTypes": null,
                              "id": 108,
                              "name": "gasLimitForOraclize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "1939:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c8aadb064606a3463908fc19806f52b198704ad5ee4820d56c70f8bdc0582948",
                                "typeString": "literal_string \"json(http://variusworldtech.com/results.json).$[1].email\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 105,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              604,
                              646,
                              692,
                              736,
                              779,
                              824,
                              873,
                              920,
                              967,
                              1016,
                              1069,
                              1120,
                              1157,
                              1197,
                              1240,
                              1280,
                              1325,
                              1373,
                              1424,
                              1472,
                              1525,
                              1581,
                              1640,
                              1696,
                              1757,
                              1821,
                              1888,
                              1952,
                              2021,
                              2093,
                              2168,
                              2240,
                              2287,
                              2336,
                              2389,
                              2440,
                              2477,
                              2517,
                              2560,
                              2600,
                              2645,
                              2693,
                              2744,
                              2792,
                              2845,
                              2901,
                              2960,
                              3016,
                              3077,
                              3141,
                              3208,
                              3272,
                              3341,
                              3413,
                              3488,
                              3560
                            ],
                            "referencedDeclaration": 736,
                            "src": "1857:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory,uint256) returns (bytes32)"
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1857:102:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1839:120:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 111,
                              "name": "validIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "2026:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 113,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 112,
                              "name": "queryId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "2035:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2026:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2046:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2026:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 116,
                        "nodeType": "ExpressionStatement",
                        "src": "2026:24:0"
                      }
                    ]
                  },
                  "id": 118,
                  "nodeType": "IfStatement",
                  "src": "1505:571:0",
                  "trueBody": {
                    "id": 98,
                    "nodeType": "Block",
                    "src": "1559:127:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 95,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1596:77:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 94,
                            "name": "newOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "1579:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1579:95:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 97,
                        "nodeType": "EmitStatement",
                        "src": "1574:100:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 120,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1333:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1351:0:0"
            },
            "scope": 121,
            "src": "1318:765:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 122,
        "src": "137:1949:0"
      }
    ],
    "src": "0:2086:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Shirl/Ethereum/oraclize-test/contracts/OraclizeTest.sol",
    "exportedSymbols": {
      "OraclizeTest": [
        121
      ]
    },
    "id": 122,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "file": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 122,
        "sourceUnit": 5944,
        "src": "63:70:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5943,
              "src": "162:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$5943",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "162:13:0"
          }
        ],
        "contractDependencies": [
          5943
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 121,
        "linearizedBaseContracts": [
          121,
          5943
        ],
        "name": "OraclizeTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "validIds",
            "nodeType": "VariableDeclaration",
            "scope": 121,
            "src": "215:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 5,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "223:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "215:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 6,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "234:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 11,
            "name": "gasLimitForOraclize",
            "nodeType": "VariableDeclaration",
            "scope": 121,
            "src": "279:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "279:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313735303030",
              "id": 10,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "315:6:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_175000_by_1",
                "typeString": "int_const 175000"
              },
              "value": "175000"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 15,
            "name": "newOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "431:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "430:20:0"
            },
            "src": "408:43:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 19,
            "name": "newData",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "471:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "470:13:0"
            },
            "src": "457:27:0"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "546:342:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "559:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$239",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 24,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "587:42:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 23,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "565:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$239_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "565:65:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$239",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "559:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$239",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "559:71:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 29,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 270,
                          "src": "698:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "720:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "698:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 28,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3585,
                      "src": "680:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "680:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "680:58:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31303030303030303030",
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "836:14:0",
                        "subdenomination": "wei",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 34,
                      "name": "oraclize_setCustomGasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3598,
                      "src": "809:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "809:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "809:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "871:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "871:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "871:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 42,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:0:0"
            },
            "scope": 121,
            "src": "517:371:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "972:336:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 52,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5958,
                            "src": "1063:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1063:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 54,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3572,
                            "src": "1077:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1077:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1063:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 51,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5961,
                        5962
                      ],
                      "referencedDeclaration": 5961,
                      "src": "1055:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1055:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "1055:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 60,
                          "name": "validIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1144:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 62,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 61,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "1153:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1144:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5961,
                        5962
                      ],
                      "referencedDeclaration": 5961,
                      "src": "1136:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:26:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1186:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 65,
                      "name": "newData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1178:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1178:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "EmitStatement",
                  "src": "1173:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "validIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1275:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 71,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1284:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1275:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1295:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1275:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "1275:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 76,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "name": "queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "920:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "937:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "937:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "952:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "919:45:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "972:0:0"
            },
            "scope": 121,
            "src": "900:408:0",
            "stateMutability": "nonpayable",
            "superFunction": 531,
            "visibility": "public"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1351:732:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5958,
                            "src": "1433:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1433:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "302e303030313735",
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1446:14:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_175000000000000_by_1",
                            "typeString": "int_const 175000000000000"
                          },
                          "value": "0.000175"
                        },
                        "src": "1433:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5961,
                        5962
                      ],
                      "referencedDeclaration": 5961,
                      "src": "1425:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1425:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1425:36:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1527:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 86,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          546,
                          564
                        ],
                        "referencedDeclaration": 546,
                        "src": "1509:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1509:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 90,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5977,
                            "src": "1544:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$121",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$121",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1536:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1536:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1536:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1509:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 117,
                    "nodeType": "Block",
                    "src": "1692:384:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1729:55:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 99,
                            "name": "newOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "1712:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1712:73:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102,
                        "nodeType": "EmitStatement",
                        "src": "1707:78:0"
                      },
                      {
                        "assignments": [
                          104
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 104,
                            "name": "queryId",
                            "nodeType": "VariableDeclaration",
                            "scope": 120,
                            "src": "1839:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 103,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1839:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 110,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1872:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e28687474703a2f2f766172697573776f726c64746563682e636f6d2f726573756c74732e6a736f6e292e245b315d2e656d61696c",
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1879:58:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c8aadb064606a3463908fc19806f52b198704ad5ee4820d56c70f8bdc0582948",
                                "typeString": "literal_string \"json(http://variusworldtech.com/results.json).$[1].email\""
                              },
                              "value": "json(http://variusworldtech.com/results.json).$[1].email"
                            },
                            {
                              "argumentTypes": null,
                              "id": 108,
                              "name": "gasLimitForOraclize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "1939:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c8aadb064606a3463908fc19806f52b198704ad5ee4820d56c70f8bdc0582948",
                                "typeString": "literal_string \"json(http://variusworldtech.com/results.json).$[1].email\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 105,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              604,
                              646,
                              692,
                              736,
                              779,
                              824,
                              873,
                              920,
                              967,
                              1016,
                              1069,
                              1120,
                              1157,
                              1197,
                              1240,
                              1280,
                              1325,
                              1373,
                              1424,
                              1472,
                              1525,
                              1581,
                              1640,
                              1696,
                              1757,
                              1821,
                              1888,
                              1952,
                              2021,
                              2093,
                              2168,
                              2240,
                              2287,
                              2336,
                              2389,
                              2440,
                              2477,
                              2517,
                              2560,
                              2600,
                              2645,
                              2693,
                              2744,
                              2792,
                              2845,
                              2901,
                              2960,
                              3016,
                              3077,
                              3141,
                              3208,
                              3272,
                              3341,
                              3413,
                              3488,
                              3560
                            ],
                            "referencedDeclaration": 736,
                            "src": "1857:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory,uint256) returns (bytes32)"
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1857:102:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1839:120:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 111,
                              "name": "validIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "2026:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 113,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 112,
                              "name": "queryId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "2035:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2026:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2046:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2026:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 116,
                        "nodeType": "ExpressionStatement",
                        "src": "2026:24:0"
                      }
                    ]
                  },
                  "id": 118,
                  "nodeType": "IfStatement",
                  "src": "1505:571:0",
                  "trueBody": {
                    "id": 98,
                    "nodeType": "Block",
                    "src": "1559:127:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 95,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1596:77:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 94,
                            "name": "newOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "1579:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1579:95:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 97,
                        "nodeType": "EmitStatement",
                        "src": "1574:100:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 120,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1333:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1351:0:0"
            },
            "scope": 121,
            "src": "1318:765:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 122,
        "src": "137:1949:0"
      }
    ],
    "src": "0:2086:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {},
      "links": {},
      "address": "0x1d05badcbd3f4657d478debb471534156523b3d3",
      "transactionHash": "0xbd06d69e9520ad3d235483ef2918661cc685cf7db6c9eef2029d1982191f9806"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-07T18:51:29.166Z"
}